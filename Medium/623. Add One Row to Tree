/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {

        queue<TreeNode*>q;
        
        
        if(depth==1){
            auto newRoot=new TreeNode(val);
            newRoot->left=root;
            return newRoot;
        }
        
        q.push(root);
        int d=1;
        int t=q.size();
        while(true){
            if(d==depth-1){
                while(!q.empty()){

                auto left=new TreeNode(val);
                auto right=new TreeNode(val);

                left->left=q.front()->left;
                right->right=q.front()->right;

                q.front()->left=left;
                q.front()->right=right;

                return root;
                }
            }

            while(t--){
                q.push(root->left);
                q.push(root->right);
                q.pop();
            }
            t=q.size();
            d++;
        }
        return root;
    }
};
