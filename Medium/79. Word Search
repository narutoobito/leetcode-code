class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size(),n=board[0].size();

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]==word[0])
                    if(dfs(i,j,board,word,1))return true;
            }
            
        }
        return false;
    }
    bool dfs(int i,int j,vector<vector<char>>&b,string& word,int s){
        if(s==word.size())return true;
        vector<pair<int,int>>dr={{0,-1},{-1,0},{1,0},{0,1}};
        char c= b[i][j];
        b[i][j]='1';
        for(auto r:dr){
            int x=i+r.first,y=j+r.second;
            if(x<0||y<0||x>=b.size()||y>=b[0].size()||b[x][y]=='1')continue;
            if(b[x][y]==word[s])if(dfs(x,y,b,word,s+1))return true;
        }
        b[i][j]=c;
        return false;
    }
};
