/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*>pts;
    TreeNode* balanceBST(TreeNode* root) {
        traverse(root);
        return build(0,pts.size()-1);
    }
    void traverse(TreeNode* root){
        if(root==NULL)return ;
        traverse(root->left);
        pts.push_back(root);
        traverse(root->right);
    }
    
    TreeNode* build(int l,int r){
        if(l>r)return NULL;
        int m=l+(r-l)/2;
        auto root=pts[m];
        root->left=build(l,m-1);
        root->right=build(m+1,r);
        return root;
    }
};
