/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*>ans;
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        tree(root,to_delete,true);
        return ans;

    }

    bool tree(TreeNode* root,vector<int>&arr,bool parDel){
        if(root==NULL)return false;
        bool del=false;
        for(auto i:arr){
            if(root->val==i){
                del=true;
            }
        }
        if(parDel and !del){
            ans.push_back(root);
        }
        

        auto left = tree(root->left,arr,del);
        auto right = tree(root->right,arr,del);

        if(left)root->left=NULL;
        if(right)root->right=NULL;
        return del;
    }
};
