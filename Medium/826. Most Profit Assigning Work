class Solution {
public:
    using func=function<int(int)>;
    int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {
        
        vector<vector<int>>arr;
        int ans=0;

        for(auto i=0;i<profit.size();i++){
            arr.push_back({difficulty[i],profit[i]});
        }
        sort(arr.begin(),arr.end());

        for(auto i=1;i<profit.size();i++){
            arr[i][1]=max(arr[i-1][1],arr[i][1]);
        }
        func bin=[&](int cur){
            int l=0,r=arr.size()-1;
            int a=-1;
            while(l<=r){
                int m=(r+l)/2;
                if(arr[m][0]<=cur){
                    a=m;
                    l=m+1;
                }
                else r=m-1;
            }
            return a;
        };

        for(auto i:worker){
            int ret=bin(i);
            if(ret!=-1)
            ans+=arr[ret][1];
        }

        return ans;
    }


};
