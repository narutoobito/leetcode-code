/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    int countPairs(TreeNode* root, int distance) {
        tree(root,distance);
        return ans;
    }

    vector<int> tree(TreeNode* root, int dis){
        vector<int>cur={};
        if(root==NULL)return cur;

        auto left= tree(root->left,dis);
        auto right= tree(root->right,dis);

        if(left.size()==0 and right.size()==0){
            cur.push_back(1);
            return cur;
        }

        for(auto i:left){
            for(auto j:right){
                if(i+j<=dis){
                    ans++;
                }
            }
            cur.push_back(i+1);
        }
        for(auto i:right){
            cur.push_back(i+1);
        }

        return cur;
        
    }
};
