/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* createBinaryTree(vector<vector<int>>& des) {
        unordered_map<int,TreeNode*>dic;
        unordered_set<TreeNode*>p,chd;
        for(auto i:des){
            auto par=i[0],child=i[1],left=i[2];

            if(!dic[par]){
                dic[par]=new TreeNode(par);
            }
            if(!dic[child]){
                dic[child]=new TreeNode(child);
            }
            p.insert(dic[par]);
            chd.insert(dic[child]);

            if(left){
                (dic[par])->left=dic[child];
            }
            else{
                dic[par]->right=dic[child];
            }
        }

         for(auto i:chd){
                p.erase(i);
            }
            for(auto i:p)return i;
            return NULL;
    }
};
