class Solution {
public:
    int maxNumEdgesToRemove(int n, vector<vector<int>>& edges) {
        vector<int>common(n+1,-1);
        int used=0;

        for(auto type=3;type>0;type--){
            auto par=common;

            auto &ds=type==3?common:par;

            for(auto &e:edges)
                if(e[0]==type){
                    int i=find(ds,e[1]),j=find(ds,e[2]);
                    if(i!=j){
                        used++;
                        if(ds[j]<ds[i])swap(i,j);
                        ds[i]+=ds[j];
                        ds[j]=i;
                    }
                
                }

            if(type!=3 and ds[find(ds,1)]!=-n)return -1;
            
        }

        return edges.size()-used;
    }

    int find(vector<int>&par,int ind){
        return par[ind]<0?ind:par[ind]=find(par,par[ind]);
    }
};
