class Solution {
public:
    using Vec=vector<vector<int>> ;
    using v=vector<int>;
    using fun=function<void(int,int)>;
    vector<int> sumOfDistancesInTree(int n, vector<vector<int>>& edges) {
        Vec adj(n,v());
        for(auto e:edges){
            adj[e[0]].push_back(e[1]);
            adj[e[1]].push_back(e[0]);
        }

        v count(n,1),res(n,0);

        fun dfs=[&](int root,int prev){
            for(auto a:adj[root]){
                if(a==prev)continue;
                dfs(a,root);
                count[root]+=count[a];
                res[root]+=res[a]+count[a];
            }
        };
        fun dfs2=[&](int root,int prev){
            for(auto a:adj[root]){
                if(a==prev)continue;
                res[a]=res[root]-count[a]+n-count[a];
                dfs2(a,root);
            }
        };
        dfs(0,-1);dfs2(0,-1);
        return res;
    }
};
